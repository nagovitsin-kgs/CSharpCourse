  /*
   Void - означает пустоту, "ничего". Использование слова void перед именем метода означает, что, 
   когда завершается выполнение метода, возвращается пустое значение, то есть по завершении определенных действий, 
   которые выполняет метод, он никаких значений не возвращает.
*/

// --- Вид 1.--- Функции в программировании. Метод 1. Ничего не принимают, ничего не возвращают.

void Method1()                                                   // void - это индификатор - пустота, пробел, вакум --ничего не принимает.
{
    Console.WriteLine("Автор: Наговицин Алексей Васильевич");    // тело метода.
}
//Method1();                                                       // вызвали данный метод.


// --- Вид 2.--- Функции в программировании. Метод 2. Что-то принимают, ничего не возвращают.

void Method2(string msg)                             // допустим принимает аргументы 
{
    Console.WriteLine(msg);                         // выводим на консоль те аргументы, которые были приняты.
}
//Method2("Текст сообщения");                        // чтобы вызвать данный метод, требуется указать его интефикатор и текс сообщения.

// --- Пример Метод 2.1 ---               // нужно, если метод принимает количество аргументов.------------

void Method21(string msg, int count)             // допустим принимает аргументы 
{
    int i = 0;                                  // исполльзуется определенное количество msg, которые будут передаваться в наш метод. 
    while (i < count)
    {
        Console.WriteLine(msg);
        i++;                                   // увеличение инкремента на 1.
    }
}
// Method21(msg: "Текст", count: 4);              // либо так - вызываем метод и указываем количество, сколько хотим увидеть раз текст.
// Method21("Текст", 4);                          // либо так вызываем, работает.
//Method21(count: 4, msg: "Новый текст");             // либо так.


// Вид 3. Функции в программировании. Метод 3. Ничего не принимают, что-то возвращают.

int Method3()           // Арг-ты метод не принимает. Если метод что-то возвращает, то указываем Тип Данных Значение которого мы ожидаем.
{
    return DateTime.Now.Year;     // возвращаем (что произошло) ГОД СЕЙЧАС
}
int year = Method3();         // В переменну year ложим наш метод, где, что-то произошло (в resturn).
//Console.WriteLine(year);      // выводим на консоль метод (ГОД сейчас).


/*
  char — это псевдоним для типа структуры System.Char .NET, представляющий символ UTF-16 в Юникоде.
  Значение по умолчанию для типа char — \0, то есть U+0000.
  Тип char поддерживает сравнение, проверку равенства, а также операции инкремента и декремента. 
  Кроме того, для операндов char арифметические и побитовые логические операторы выполняют операцию 
  с соответствующими кодами символов и создают результат типа int.
  
  Тип string представляет текст как последовательность значений char.
  Строка — это объект типа. String, значением которого является текст. Внутри программы текст хранится 
  в виде упорядоченной коллекции объектов Char только для чтения. В конце строки C# нет нуль-символов. 
  Поэтому строка C# может содержать любое число внедренных нуль-символов ('\0'). 
  Свойство. Length строки соответствует числу содержащихся в ней объектов. 
*/

// Вид 4. Функции в программировании. Метод 4. Что-то принимают, что-то возвращают.

//string Method4(int count, char c)          // будем возвращать строку
string Method4(int count, string c)
{
    int i = 0;
}


