/* Двумерные масссивы: */
/* Массив с типом строки:
string[,] table = new string[2, 5]; // он же многомерный массив, 2 (строки), 5 (столбцы).
//string.Empty                                   // инициализация для строк происходит, вот такой константой.
//table[0, 0]  table[0, 1]  table[0, 2]  table[0, 3]  table[0, 4] // строка с индексом 0 и столбцы с 0 до 4.
// table[1, 0]  table[1, 1]  table[1, 2]  table[1, 3]  table[1, 4] // строка с индексом 1 и столбцы с 0 до 4.

table[1, 2] = "слово";   // наименование массива, задаём значение элемента 1(индекс строки) и 2 (индекс столбца). Работаем как буд-то это переменная.
// используем цикл в цикле, чтобы распечатать данный массив.
for (int rows = 0; rows < 2; rows++)   // rows (строки)
{
    for (int columns = 0; columns < 5; columns++)    // columns (столбцы, колонки)
    {
        Console.WriteLine($"--{table[rows, columns]}--"); // выводим: обащаемся к массиву и индексам строк и столбцов. Добавим чёрточки, чтобы увидеть на консоле...
    }
}                                            
*/
/*Вариант 1. Массив с типом числа:
// для массива с числами заданными 3 и 4.

int[,] matrix = new int[3, 4];  

for (int i = 0; i < 3; i++)
{
    for (int j = 0; j < 4; j++)
    {
        Console.Write($"{matrix[i, j]} ");
    }
Console.WriteLine(); // после того как вывели столбцы через пробел, принудительно выводим на пустые строки - строки по i.
}
*/

/* Вариант 2. Массив с типом числа: 
// для массива с числами для работы в методах или циклах (функциях) необходимо вот так (условие i и j через):

int[,] matrix = new int[3, 4];  

for (int i = 0; i < matrix.GetLength(0); i++)       // matrix.GetLength(0) = 3 для строк (о - это кол-во строк) 
{
    for (int j = 0; j < matrix.GetLength(1); j++)   // matrix.GetLength(1) = 4 для столбцов (1 - это кол-во столбцов)
    {
        Console.Write($"{matrix[i, j]} ");
    }
Console.WriteLine(); // после того как вывели столбцы через пробел, принудительно выводим на пустые строки - строки по i.
}
*/

//------------------------------МЕТОД-------------------------------------//
/* Опишем МЕТОД, который будет описывать, решать и заполнять числами) наш двумерный массив:

int[,] matrix = new int[3, 4];

void PrintArray(int[,] matr) // этот метод PrintArray принимает в качестве аргументов двумерную таблицу чисел (int[,] matr) и будет её печатать matrix
{
    for (int i = 0; i < matr.GetLength(0); i++)       // matrix.GetLength(0) = 3 для строк (о - это кол-во строк) 
    {
        for (int j = 0; j < matr.GetLength(1); j++)   // matrix.GetLength(1) = 4 для столбцов (1 - это кол-во столбцов)
        {
            Console.Write($"{matr[i, j]} ");
        }
        Console.WriteLine(); // после того как вывели столбцы через пробел, принудительно выводим на пустые строки - строки по i.
    }
}

//int[,] matrix = new int[3, 4]; // !!! для удобства видимости, чтобы код был скомпанованым можно перетащить сверху....
PrintArray(matrix); // вызываем метод на печать, консоль...
*/
// ------ продолжение -------:
/* Дополнительный МЕТОД, который будет описывать, решать и заполнять СЛУЧАЙНЫМИ числами наш двумерный массив:
   ИСПОЛЬЗУЕМ ВСЁ ВЫШЕ и добавляем метод заполнения случайными числами, как в одномерном массиве (ранее решали)

int[,] matrix = new int[35, 40];

void PrintArray(int[,] matr) // этот метод PrintArray принимает в качестве аргументов двумерную таблицу чисел (int[,] matr) и будет её печатать matrix
{
    for (int i = 0; i < matr.GetLength(0); i++)       // matrix.GetLength(0) = 3 для строк (о - это кол-во строк) 
    {
        for (int j = 0; j < matr.GetLength(1); j++)   // matrix.GetLength(1) = 4 для столбцов (1 - это кол-во столбцов)
        {
            Console.Write($"{matr[i, j]} ");
        }
        Console.WriteLine(); // после того как вывели столбцы через пробел, принудительно выводим на пустые строки - строки по i.
    }
}
void FillArray(int[,] matr)  // FillArray (заполнять массив) - это метод принимает в качестве аргументов двумерную таблицу чисел...
{
    for (int i = 0; i < matr.GetLength(0); i++)   // GetLength (получить длинну)
    {
        for (int j = 0; j < matr.GetLength(1); j++)
        {
            matr[i, j] = new Random().Next(1, 10); // [1; 10) - взяли полу интервал...
        }
    }
}
//int[,] matrix = new int[3, 4]; // !!! для удобства видимости, чтобы код был скомпанованым можно перетащить сверху....
PrintArray(matrix); // вызываем 1 , метод, где нолики - на печать, консоль...
FillArray(matrix); // вызываем заполнение 2 дополнительным методом, где случайные числа...
Console.WriteLine(); // добавим пустую строку для разделения 1 и 2 доп метода....
PrintArray(matrix); // !обязательно вызываем печать по всем методам вместе.....
// вызвали здесь два метода.............
*/














